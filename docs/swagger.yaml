definitions:
  model.CategoryInputResponse:
    properties:
      name:
        type: string
    type: object
  model.GoodInputResponse:
    properties:
      categories:
        items:
          type: integer
        type: array
      name:
        type: string
    type: object
  model.Login:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  model.Register:
    properties:
      email:
        type: string
      password:
        type: string
      phone-number:
        type: string
      username:
        type: string
    type: object
  model.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      phone_number:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /category/create:
    post:
      description: Add good to the database of goods
      parameters:
      - description: Category Info
        in: body
        name: categoryInput
        required: true
        schema:
          $ref: '#/definitions/model.CategoryInputResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CategoryInputResponse'
      summary: Create category
  /category/list:
    get:
      description: Get categories list
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get all categories
  /category/remove/{id}:
    delete:
      description: Deletes category and updates all goods categories (removes deleted
        category)
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Delete category
  /category/update/{id}:
    patch:
      description: Updates existing goods instance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Category
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/model.CategoryInputResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CategoryInputResponse'
      summary: Update existing good
  /good/create:
    post:
      description: Add good to the database of goods.
      parameters:
      - description: Good Info
        in: body
        name: goodInput
        required: true
        schema:
          $ref: '#/definitions/model.GoodInputResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GoodInputResponse'
      summary: Create good
  /good/list/{category_id}:
    get:
      description: Get goods list by the inputted category
      parameters:
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get goods by category ID
  /good/remove/{id}:
    delete:
      description: Deletes good instance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Delete good
  /good/update/{id}:
    patch:
      description: Updates existing goods instance
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated good
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/model.GoodInputResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GoodInputResponse'
      summary: Update existing good
  /login:
    post:
      description: User-login
      parameters:
      - description: Login data
        in: body
        name: loginInput
        required: true
        schema:
          $ref: '#/definitions/model.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Login-endpoint
  /register:
    post:
      description: User-registration
      parameters:
      - description: Registration data
        in: body
        name: regInput
        required: true
        schema:
          $ref: '#/definitions/model.Register'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Registration-endpoint
swagger: "2.0"
